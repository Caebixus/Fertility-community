# Generated by Django 3.0.3 on 2020-02-09 10:06

import ckeditor.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicClinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinicName', models.CharField(max_length=80)),
                ('clinicTitle', models.CharField(blank=True, max_length=200)),
                ('clinicGoogleReviewsUrl', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=800)),
                ('clinic_staff', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('clinic_url', models.URLField(blank=True, null=True)),
                ('contact_url', models.URLField()),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.CharField(blank=True, max_length=50)),
                ('clinicStreetAddress', models.CharField(max_length=200)),
                ('clinicCity', models.CharField(max_length=100)),
                ('clinicState', models.CharField(max_length=100)),
                ('clinicRegion', models.CharField(blank=True, max_length=100, null=True)),
                ('clinicPostalCode', models.CharField(max_length=100)),
                ('clinicSart', models.CharField(blank=True, max_length=100, null=True)),
                ('clinicHfea', models.CharField(blank=True, max_length=100, null=True)),
                ('ivf_treatment', models.BooleanField(default=False)),
                ('icsi_treatment', models.BooleanField(default=False)),
                ('egg_donor_recipients', models.BooleanField(default=False)),
                ('sperm_donor_recipients', models.BooleanField(default=False)),
                ('embryo_donor_recipients', models.BooleanField(default=False)),
                ('ivf_treatment_cost', models.FloatField(blank=True, null=True)),
                ('icsi_treatment_cost', models.FloatField(blank=True, null=True)),
                ('egg_donor_recipients_cost', models.FloatField(blank=True, null=True)),
                ('sperm_donor_recipients_cost', models.FloatField(blank=True, null=True)),
                ('embryo_donor_recipients_cost', models.FloatField(blank=True, null=True)),
                ('egg_freezing', models.BooleanField(default=False)),
                ('embryo_freezing', models.BooleanField(default=False)),
                ('sperm_freezing', models.BooleanField(default=False)),
                ('assisted_hatching', models.BooleanField(default=False)),
                ('vasectomy_reversal', models.BooleanField(default=False)),
                ('fertility_preservation', models.BooleanField(default=False)),
                ('surrogacy', models.BooleanField(default=False)),
                ('pgd', models.BooleanField(default=False)),
                ('iui_treatment', models.BooleanField(default=False)),
                ('egg_freezing_cost', models.FloatField(blank=True, null=True)),
                ('embryo_freezing_cost', models.FloatField(blank=True, null=True)),
                ('sperm_freezing_cost', models.FloatField(blank=True, null=True)),
                ('assisted_hatching_cost', models.FloatField(blank=True, null=True)),
                ('vasectomy_reversal_cost', models.FloatField(blank=True, null=True)),
                ('fertility_preservation_cost', models.FloatField(blank=True, null=True)),
                ('surrogacy_cost', models.FloatField(blank=True, null=True)),
                ('pgd_cost', models.FloatField(blank=True, null=True)),
                ('iui_treatment_cost', models.FloatField(blank=True, null=True)),
                ('single_woman_treatment', models.BooleanField(default=False)),
                ('reciprocal_treatment', models.BooleanField(default=False)),
                ('hiv_patients_treatment', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('is_published_list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('clinic_pro_promotion_name', models.CharField(blank=True, max_length=80, null=True)),
                ('clinic_pro_promotion_description', models.TextField(blank=True, max_length=800, null=True)),
                ('clinic_pro_promotion_landing_url', models.URLField(blank=True, null=True)),
                ('clinic_pro_logo_pic', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_main_pic', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_photo_1', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_photo_2', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_photo_3', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_photo_4', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_photo_5', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('clinic_pro_photo_6', models.ImageField(blank=True, null=True, upload_to='ownerPhotos')),
                ('pro_is_published', models.BooleanField(default=False)),
                ('pro_is_published_list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('pro_list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('verified_is_published', models.BooleanField(default=False)),
                ('popular_is_published', models.BooleanField(default=False)),
                ('promotion_is_published', models.BooleanField(default=False)),
                ('clinicOwner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
